{"version":3,"sources":["content/emojis/desert.png","content/emojis/blossoming-flower.png","content/emojis/mushroom.png","content/emojis/woozy.png","content/emojis/teddy-bear.png","content/emojis/butterfly.png","content/emojis/leaf-in-wind.png","content/emojis/spiral-shell.png","components/audioControls.js","components/drawingCanvas.js","content/modalText.js","components/introModal.js","components/marquee.js","components/drawingTools.js","components/settingsMenu.js","components/glVis.js","components/responseDisplay.js","components/colourPicker.js","components/desktopApp.js","components/mobileApp.js","content/preloadArrays.js","App.js","index.js","content/emojis/alien.png","content/media/slowdiscpixel.gif"],"names":["AudioControls","props","volNotchGen","Array","fill","isMouseDown","document","addEventListener","VolumeNotches","map","nothing","index","className","id","onMouseDown","clickVolumeNotch","onMouseEnter","e","style","height","length","onClick","muteAudio","isMuted","MuteIconOff","MuteIconOn","stopPropagation","clickedID","parseInt","target","console","log","notches","getElementsByClassName","notch","classList","remove","add","width","viewBox","xmlns","transform","d","stroke","strokeLinecap","strokeWidth","opacity","DrawingCanvas","useState","canvas","setCanvas","canvasRef","useRef","useEffect","current","newCanvas","fabric","Canvas","isDrawingMode","canvasWrapper","getElementById","setWidth","offsetWidth","setHeight","offsetHeight","freeDrawingBrush","color","brushColour","brushSize","freeDrawingCursor","getCustomCursor","on","setIsDrawing","window","updateCanvasDimensions","setDrawingCanvas","setCurrentCanvasState","toDatalessJSON","circle","btoa","acknowledgementOfCountryText","introText","instructionsText","IntroModal","currentModalPage","setCurrentModalPage","container","A11yDialog","show","modalPages","fontSize","justifyContent","toggleModal","role","Marquee","src","require","default","alt","currentArtist","DrawingTools","mobile","toggleEraser","EraserIcon","undoDrawing","UndoIcon","redoDrawing","RedoIcon","type","name","defaultValue","colours","position","top","min","max","setBrushSize","markerWidth","markerHeight","refX","refY","orient","points","x","y","SettingsMenu","this","overlayToggle","toggleFocus","Component","shaders","Shaders","create","onecolour","frag","GLSL","ResponseDisplay","responseFadeTime","responsesToDisplay","setResponsesToDisplay","responsesToDisplayRef","responsesDisplaying","i","setTimeout","displayNextResponse","responseData","modOrderResponses","from","nextResponse","pop","createImageResponseDisplay","createTextResponseDisplay","concat","imageResponse","newResponseBox","createElement","collision","xRandom","Math","random","yRandom","appendChild","responseBoxDimensions","getBoundingClientRect","left","colliderArray","detect2DBoxCollision","requestAnimationFrame","responseFadeInOut","textResponse","innerHTML","responseElement","transition","box1","box2","right","bottom","ColourPicker","colourInputChange","selectors","cl","contains","setCurrentColours","colourSwap","SwapIcon","colNum","charAt","documentElement","setProperty","value","newColours","markerEnd","DesktopApp","modalIsOpen","title","currentPrompt","setInput","placeholder","changeColourOrder","changeColours","changeBrushSize","submitResponse","artistPresets","artistname","MobileApp","App","onMobile","matchMedia","matches","innerWidth","innerHeight","windowSize","setWindowSize","setModalIsOpen","inputIsDraw","setInputIsDraw","setResponseData","currentColours","isDrawing","isDrawingRef","isEraser","setIsEraser","savedBrush","setSavedBrush","drawingCanvas","drawingCanvasRef","currentCanvasState","currentCanvasStateRef","undoStack","setUndoStack","redoStack","setRedoStack","undoStackRef","redoStackRef","focusMode","setFocusMode","textResponseRule","getCSSRule","imageResponseRule","backgroundColor","border","saveCanvasState","removeEventListener","changeToDraw","zIndex","EraserBrush","newUndoStack","shift","push","newCanvasState","newRedoStack","splice","newState","loadFromJSON","returnedResponses","imageInput","dataURL","toDataURL","format","formData","FormData","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","dataURLtoFile","clear","fetch","method","body","then","res","json","data","response","RESPONSE","RESPONSE_TYPE","textInput","headers","mode","ruleName","toLowerCase","result","find","prototype","call","styleSheets","styleSheet","cssRules","cssRule","CSSStyleRule","selectorText","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.791dac06.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/desert.afb4dc6a.png\";","export default __webpack_public_path__ + \"static/media/blossoming-flower.5f78e6a8.png\";","export default __webpack_public_path__ + \"static/media/mushroom.6f17f235.png\";","export default __webpack_public_path__ + \"static/media/woozy.df9645ec.png\";","export default __webpack_public_path__ + \"static/media/teddy-bear.a4c592be.png\";","export default __webpack_public_path__ + \"static/media/butterfly.22ba9572.png\";","export default __webpack_public_path__ + \"static/media/leaf-in-wind.b5dea42c.png\";","export default __webpack_public_path__ + \"static/media/spiral-shell.49e9854a.png\";","import React from 'react';\r\n\r\nexport default function AudioControls(props){\r\n\r\n  const notchNumber = 12;\r\n\r\n  let volNotchGen = Array(notchNumber).fill('');\r\n\r\n  /* keep track of mouse down for volume drag event */\r\n  var isMouseDown = false;\r\n  document.addEventListener(\"mouseup\", () => {isMouseDown = false});\r\n\r\n  const VolumeNotches = volNotchGen.map((nothing, index) =>\r\n    <button className='VolumeNotch VolumeActive' id={index}\r\n        key={index+nothing} \r\n        onMouseDown={clickVolumeNotch}\r\n        onMouseEnter={(e) => {if(isMouseDown){clickVolumeNotch(e)}}}\r\n        style={{height: 100/volNotchGen.length + \"%\"}} />\r\n  );\r\n\r\n  return (\r\n    <>              \r\n      <button id=\"mute-button\" onClick={props.muteAudio}>\r\n        {props.isMuted\r\n          ? <MuteIconOff />\r\n          : <MuteIconOn />\r\n        }          \r\n        </button>\r\n      <div id=\"volume-wrapper\">\r\n        {VolumeNotches}\r\n      </div>\r\n    </> \r\n  )\r\n\r\n  function clickVolumeNotch(e){\r\n    e.stopPropagation();\r\n    isMouseDown = true;\r\n    let clickedID = parseInt(e.target.id);\r\n    console.log(clickedID);\r\n    /* set classes for active notch */\r\n    let notches = document.getElementsByClassName(\"VolumeNotch\");\r\n    for (let notch of notches){\r\n      if(notch.id < clickedID){\r\n        notch.classList.remove(\"VolumeActive\");\r\n      } else {\r\n        notch.classList.add(\"VolumeActive\");\r\n      }  \r\n    }\r\n    /* set new volume */\r\n    let newVolume = 1 - (1/notchNumber) * clickedID;\r\n    //document.getElementById(\"audio-source\").volume = newVolume;\r\n  }\r\n}\r\n\r\nfunction MuteIconOn(props){\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 100 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      transform=\"\">\r\n        {/* Speaker */}\r\n        <path id=\"mute-speaker\"\r\n              d=\" M 10,42\r\n              A 2,2 90 0 1 12,40\r\n              L 15,40 30,15 35,15\r\n              Q 38,50 35,85 \r\n              L 30,85 15,60 12,60\r\n              A 2,2 90 0 1 10,58\r\n              Z              \r\n        \" />\r\n        {/* Volume Lines */}\r\n        <path fill=\"none\" stroke=\"black\" strokeLinecap=\"round\" strokeWidth=\"6\" className=\"MuteLines active\"\r\n              d=\" M 45,35\r\n                  Q 55,50 45,65\" />\r\n        <path fill=\"none\" stroke=\"black\" strokeLinecap=\"round\" strokeWidth=\"6\" className=\"MuteLines active\"\r\n              d=\" M 55,22.5\r\n                  Q 77.33,50 55,77.5\" />\r\n        <path fill=\"none\" stroke=\"black\" strokeLinecap=\"round\" strokeWidth=\"6\" className=\"MuteLines active\"\r\n              d=\" M 65,10\r\n                  Q 101.66,50 65,90\" />\r\n    </svg>\r\n  )\r\n}\r\nfunction MuteIconOff(props){\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 100 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      opacity=\"50%\">\r\n        {/* Speaker */}\r\n        <path id=\"mute-speaker\"\r\n              d=\" M 10,42\r\n              A 2,2 90 0 1 12,40\r\n              L 15,40 30,15 35,15\r\n              Q 38,50 35,85 \r\n              L 30,85 15,60 12,60\r\n              A 2,2 90 0 1 10,58\r\n              Z              \r\n        \" />\r\n        <path fill=\"none\" stroke=\"black\" strokeWidth=\"6\"\r\n              d=\" M 50, 35\r\n                  L 80, 65\r\n              \" />\r\n        <path fill=\"none\" stroke=\"black\" strokeWidth=\"6\" \r\n              d=\" M 80, 35\r\n                  L 50, 65\r\n              \" />\r\n    </svg>\r\n  )\r\n}\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { fabric } from 'fabric';\r\n\r\nexport default function DrawingCanvas(props){\r\n\r\n  \r\n  const [canvas, setCanvas] = useState(null);\r\n  let canvasRef = useRef(null);\r\n  useEffect(() => {canvasRef.current = canvas}, [canvas]);\r\n\r\n  useEffect(() => {\r\n    let newCanvas = new fabric.Canvas('drawing-canvas', { isDrawingMode: true });\r\n    let canvasWrapper = document.getElementById(\"drawing-canvas-wrapper\"); \r\n    newCanvas.setWidth(canvasWrapper.offsetWidth);\r\n    newCanvas.setHeight(canvasWrapper.offsetHeight);\r\n    newCanvas.freeDrawingBrush.color = props.brushColour;    \r\n    newCanvas.freeDrawingBrush.width = props.brushSize;\r\n    newCanvas.freeDrawingCursor = getCustomCursor();\r\n    newCanvas.on('mouse:down', () => props.setIsDrawing(true));\r\n    setCanvas(newCanvas);\r\n    console.log(\"check\")\r\n    window.addEventListener('resize', updateCanvasDimensions);\r\n    props.setDrawingCanvas(newCanvas);\r\n    props.setCurrentCanvasState(newCanvas.toDatalessJSON());\r\n  }, [setCanvas]);\r\n\r\n  useEffect(() => {\r\n    if(canvasRef.current){\r\n      canvasRef.current.freeDrawingBrush.color = props.brushColour;\r\n      canvasRef.current.freeDrawingCursor = getCustomCursor();\r\n    }    \r\n  }, [props.brushColour]);\r\n\r\n  useEffect(() => {\r\n    if(canvasRef.current){\r\n      canvasRef.current.freeDrawingBrush.width = props.brushSize;\r\n      canvasRef.current.freeDrawingCursor = getCustomCursor();\r\n    }    \r\n  }, [props.brushSize]);\r\n\r\n  return (\r\n    <div id=\"drawing-canvas-wrapper\">\r\n      <canvas id=\"drawing-canvas\" />\r\n    </div>\r\n  )\r\n\r\n  function updateCanvasDimensions() {\r\n    let canvasWrapper = document.getElementById(\"drawing-canvas-wrapper\");\r\n    canvasRef.current.setWidth(canvasWrapper.offsetWidth);\r\n    canvasRef.current.setHeight(canvasWrapper.offsetHeight);    \r\n  }\r\n\r\n  function getCustomCursor() {\r\n    const circle = \r\n      `<svg height=\"${props.brushSize}\"\r\n            fill=\"${props.brushColour}\"\r\n            viewBox=\"0 0 ${props.brushSize * 2} ${props.brushSize * 2}\"\r\n            width=\"${props.brushSize}\"\r\n            xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"50%\"\r\n                cy=\"50%\"\r\n                r=\"${props.brushSize}\" />\r\n      </svg>`;      \r\n    return `url(data:image/svg+xml;base64,${window.btoa(circle)}) ${props.brushSize / 2} ${props.brushSize / 2}, move`;\r\n  }\r\n}\r\n","export const acknowledgementOfCountryText = <span>\r\n  This website was created and is maintained on the unceded territory of the Wurundjeri People of the Eastern Kulin Nation, \r\n  the Traditional Custodians of the land. We recognise their ongoing legacy of connection to land, waters and culture \r\n  and pay respect to their Elders past and present. We extend this respect to all other First Nations peoples \r\n  of this continent, whose stolen land the material pathways that allow our digital connectivity are built upon.\r\n</span>\r\n\r\nexport const introText = <>\r\n  <span>\r\n    room2.fm seeks to create a digital space for collective reflection, sharing, and vulnerability. During the last lockdown \r\n    season we were lucky to have a range of guest artists who helped facilitate this by contributing sounds, texts and visuals \r\n    to the space, which was brought together by the active participation in the responses and in the chat by those attending \r\n    the space on each given weekly event.\r\n  </span>\r\n  <br />  \r\n  <br />\r\n  <span>\r\n    There is no right or wrong way for you to listen, respond to, or feel a piece of music or sound. We encourage you to \r\n    trust your ears and intuition and respond sincerely and in whatever way feels true to your experience.\r\n  </span>\r\n  <br />\r\n  <br />\r\n  <span className=\"ModalTextSmall\">\r\n    This website has been optimised to run with the window maximised on Chrome and Firefox on a desktop or laptop screen. \r\n    If you are having issues, please try one of these browsers.\r\n    <br />\r\n    If you would like a high-contrast version of the response text with no distortion please click 'Focus Mode' button.\r\n    <br />    \r\n    We will be moderating responses that we feel are intentionally disruptive or may make others feel unsafe in the space.\r\n  </span>\r\n  <br />\r\n  <br />\r\n</>\r\n\r\nexport const instructionsText = <>\r\n  <span>\r\n    You can share your response to the music, prompts and visuals in a number of ways.\r\n  </span>\r\n  <br />\r\n  <br />\r\n  {/* <span>\r\n    You are encouraged to use the emoji triangle in the bottom left of the screen to convey what you are feeling about the \r\n    sounds you are receiving. Click and drag the circle to any of the points of the triangle or somewhere between them. The \r\n    collective selection of everyone participating in the stream will be reflected in the main visuals.\r\n  </span> */}\r\n  {/* <br />\r\n  <br /> */}\r\n  <span>\r\n    Periodically, text prompts will come up in the lower middle of the screen. Underneath the prompts you can select to respond \r\n    via either writing or drawing depending on what you think is most appropriate. Once you are happy with your response you can \r\n    click the ‘submit response’ button to share it with others. Above the ‘submit response’ button, you can select the colour palette \r\n    you will be able to draw responses with, along with options to change the brush size, use an eraser and undo or redo additions to \r\n    your drawing. \r\n  </span>\r\n  <br />\r\n  <br />\r\n  <span>\r\n    Your responses to these prompts will be completely anonymised and not attributable to you in any way, however during this \r\n    demonstration we will be capturing a screen recording of the experience.\r\n  </span>\r\n  <br />\r\n  <br />\r\n  <span>\r\n    You can also use the chat box on the right of the screen to directly speak to others participating. Select a username and \r\n    click ‘Join Room’ to engage. Be yourself, be someone else, be whomever you want to be!\r\n  </span>\r\n  <br />\r\n  <br />\r\n  <span className=\"ModalTextSmall\">\r\n    room2.fm was created by Patrick Hase and Anuraag Bhatia. We welcome your thoughts, feedback, or questions - please send them through to room2fm@gmail.com\r\n  </span>            \r\n</>\r\n\r\nexport const warningText = <>\r\n\r\n</>","import React, { useEffect, useState, Component } from 'react';\r\nimport A11yDialog from 'a11y-dialog';\r\nimport { acknowledgementOfCountryText, introText, instructionsText, /* warningText */ } from '../content/modalText';\r\nexport default function IntroModal(props) {\r\n  const [currentModalPage, setCurrentModalPage] = useState(1);\r\n  \r\n  // run init on load\r\n  useEffect(() => {\r\n    const container = document.getElementById(\"AOC-modal\");\r\n    const dialog = new A11yDialog(container);\r\n    dialog.show();\r\n  },[]);\r\n\r\n  let modalPages = [\r\n    //page 1 Logo - no continue button on this one if the site needs to get closed\r\n    <div id=\"logo-wrapper\">\r\n      <div id=\"text-logo\">\r\n        <pre id=\"pre-logo-wrapper\">\r\n          <div id=\"logo-line-1\">__________________________________________________________________<u className=\"text-gradient-1\">/\\\\\\\\\\\\\\\\\\</u>_____        <br/></div>\r\n          <div id=\"logo-line-2\">&nbsp;________________________________________________________________<u className=\"text-gradient-2\">/\\\\\\///////\\\\\\</u>___       <br/></div>\r\n          <div id=\"logo-line-3\">&nbsp;&nbsp;_______________________________________________________________<u className=\"text-gradient-3\">\\///</u>______<u className=\"text-gradient-3\">\\//\\\\\\</u>__      <br/></div>\r\n          <div id=\"logo-line-4\">&nbsp;&nbsp;&nbsp;__<u className=\"text-gradient-4\">/\\\\/\\\\\\\\\\\\\\</u>______<u className=\"text-gradient-4\">/\\\\\\\\\\</u>________<u className=\"text-gradient-4\">/\\\\\\\\\\</u>_______<u className=\"text-gradient-4\">/\\\\\\\\\\</u>__<u className=\"text-gradient-4\">/\\\\\\\\\\</u>_____________<u className=\"text-gradient-4\">/\\\\\\/</u>___     <br/></div>\r\n          <div id=\"logo-line-5\">&nbsp;&nbsp;&nbsp;&nbsp;_<u className=\"text-gradient-5\">\\/\\\\\\/////\\\\\\</u>___<u className=\"text-gradient-5\">/\\\\\\///\\\\\\</u>____<u className=\"text-gradient-5\">/\\\\\\///\\\\\\</u>___<u className=\"text-gradient-5\">/\\\\\\///\\\\\\\\\\///\\\\\\</u>________<u className=\"text-gradient-5\">/\\\\\\//</u>_____    <br/></div>\r\n          <div id=\"logo-line-6\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_<u className=\"text-gradient-6\">\\/\\\\\\</u>___<u className=\"text-gradient-6\">\\///</u>___<u className=\"text-gradient-6\">/\\\\\\</u>__<u className=\"text-gradient-6\">\\//\\\\\\</u>__<u className=\"text-gradient-6\">/\\\\\\</u>__<u className=\"text-gradient-6\">\\//\\\\\\</u>_<u className=\"text-gradient-6\">\\/\\\\\\</u>_<u className=\"text-gradient-6\">\\//\\\\\\</u>__<u className=\"text-gradient-6\">\\/\\\\\\</u>_____<u className=\"text-gradient-6\">/\\\\\\//</u>________   <br/></div>\r\n          <div id=\"logo-line-7\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_<u className=\"text-gradient-7\">\\/\\\\\\</u>_________<u className=\"text-gradient-7\">\\//\\\\\\</u>__<u className=\"text-gradient-7\">/\\\\\\</u>__<u className=\"text-gradient-7\">\\//\\\\\\</u>__<u className=\"text-gradient-7\">/\\\\\\</u>__<u className=\"text-gradient-7\">\\/\\\\\\</u>__<u className=\"text-gradient-7\">\\/\\\\\\</u>__<u className=\"text-gradient-7\">\\/\\\\\\</u>___<u className=\"text-gradient-7\">/\\\\\\/</u>___________  <br/></div>\r\n          <div id=\"logo-line-8\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_<u className=\"text-gradient-8\">\\/\\\\\\</u>__________<u className=\"text-gradient-8\">\\///\\\\\\\\\\/</u>____<u className=\"text-gradient-8\">\\///\\\\\\\\\\/</u>___<u className=\"text-gradient-8\">\\/\\\\\\</u>__<u className=\"text-gradient-8\">\\/\\\\\\</u>__<u className=\"text-gradient-8\">\\/\\\\\\</u>__<u className=\"text-gradient-8\">/\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\</u>_ <br/></div>\r\n          <div id=\"logo-line-9\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;_<u className=\"text-gradient-9\">\\///</u>_____________<u className=\"text-gradient-9\">\\/////</u>________<u className=\"text-gradient-9\">\\/////</u>_____<u className=\"text-gradient-9\">\\///</u>___<u className=\"text-gradient-9\">\\///</u>___<u className=\"text-gradient-9\">\\///</u>__<u className=\"text-gradient-9\">\\///////////////</u>__<br/></div>\r\n        </pre>            \r\n      </div>\r\n    </div>,\r\n  \r\n    //page 2 AOC\r\n    <div id=\"modal-page-wrapper\">\r\n      <div id=\"modal-text-wrapper\" className=\"modal-text-wrapper-aoc\">\r\n          <div id=\"modal-text\" style={{fontSize: \"2.5rem\", justifyContent: \"space-around\"}}>\r\n            {acknowledgementOfCountryText}\r\n          </div>\r\n      </div>\r\n      <button id=\"modal-continue-button\" onClick={() => setCurrentModalPage(currentModalPage + 1)}> Continue </button>\r\n    </div>,\r\n\r\n    //'Where Are We' Native Land info TBA here\r\n    <div id=\"modal-page-wrapper\">\r\n      <div id=\"modal-title-wrapper\">\r\n        <div id=\"modal-title\">\r\n          Where are you?\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      \r\n      <div id=\"modal-text-wrapper\">\r\n          <div id=\"modal-text\">\r\n            <p>Native Land info too go here</p>\r\n            <span className=\"ModalTextSmall\">Disclaimer text to go here</span>\r\n          </div>\r\n      </div>        \r\n      <button id=\"modal-continue-button\" onClick={() => setCurrentModalPage(currentModalPage + 1)}> Continue </button>\r\n    </div>,\r\n    \r\n    //page 3 Welcome\r\n    <div id=\"modal-page-wrapper\">\r\n      <div id=\"modal-title-wrapper\">\r\n        <div id=\"modal-title\">\r\n          Welcome to room2.fm async\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      <div id=\"modal-text-wrapper\">\r\n          <div id=\"modal-text\">\r\n            {introText}\r\n          </div>\r\n      </div>        \r\n      <button id=\"modal-continue-button\" onClick={() => setCurrentModalPage(currentModalPage + 1)}> Continue </button>\r\n    </div>,\r\n  \r\n    //page 4 Instructions\r\n    <div id=\"modal-page-wrapper\">\r\n      <div id=\"modal-title-wrapper\">\r\n        <div id=\"modal-title\">\r\n          Welcome to room2.fm async\r\n        </div>\r\n        <hr />\r\n      </div>\r\n      <div id=\"modal-text-wrapper\">\r\n          <div id=\"modal-text\">\r\n            {instructionsText}\r\n          </div>\r\n      </div>        \r\n      <button id=\"modal-continue-button\" onClick={() => props.toggleModal()}> Continue </button>\r\n    </div>\r\n  ]\r\n\r\n  return (\r\n    <div id=\"AOC-modal\"\r\n         className=\"ModalWrapper\"\r\n         aria-labelledby=\"modal-title\"\r\n         aria-hidden=\"false\" >\r\n\r\n      <div data-a11y-dialog-hide className=\"ModalOverlay\" ></div>\r\n\r\n      <div role=\"document\" className=\"ModalBox\">\r\n        {currentModalPage === 1\r\n          ? <>{modalPages[currentModalPage]}</>\r\n          : <>\r\n            {modalPages[currentModalPage]}\r\n          </>}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\n\r\nexport default function Marquee (props){\r\n  return (\r\n    <div id=\"top-banner-wrapper\">\r\n      <img id=\"cd-gif\" src={require('../content/media/slowdiscpixel.gif').default} alt=\"spinning cd gif\" />  \r\n      <div id=\"marquee-wrapper\">\r\n          <div id=\"marquee-text-scroll\">\r\n            <span className=\"MarqueeEmoji\"> ~(˘▾˘~) </span>\r\n            ~ ~ ~ room2.fm is live \r\n            <span className=\"MarqueeEmoji\">(~˘▾˘)~</span> \r\n            {\"NOW PLAYING: \" + props.currentArtist} \r\n            <span className=\"MarqueeEmoji\"> ~(˘▾˘~) </span>\r\n            ~ ~ ~ room2.fm is live \r\n            <span className=\"MarqueeEmoji\">(~˘▾˘)~</span> \r\n            {\"NOW PLAYING: \" + props.currentArtist} \r\n            <span className=\"MarqueeEmoji\"> ~(˘▾˘~) </span>\r\n            ~ ~ ~ room2.fm is live \r\n            <span className=\"MarqueeEmoji\">(~˘▾˘)~</span> \r\n            {\"NOW PLAYING: \" + props.currentArtist}\r\n          </div>\r\n      </div>            \r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react';\r\n\r\nexport default function DrawingTools(props){\r\n  return (<>\r\n    {props.mobile\r\n      ?<>\r\n        <div id=\"drawing-buttons-wrapper\">\r\n          <button id=\"erase-brush-button\" className=\"DrawingUIButton\" onClick={() => props.toggleEraser()}> ERASER <div id=\"eraser-icon\"><EraserIcon /></div></button>\r\n          <button id=\"undo-button\" className=\"DrawingUIButton\" onClick={props.undoDrawing}> UNDO <div id=\"undo-icon\"><UndoIcon /></div></button>\r\n          <button id=\"redo-button\" className=\"DrawingUIButton\" onClick={props.redoDrawing}> REDO <div id=\"redo-icon\"><RedoIcon /></div></button>\r\n          <span id=\"brush-col-label\">Brush<br />Colour</span>\r\n          <input type=\"color\" id=\"mobile-col-select\" className=\"DrawingUIButton\" name=\"col1Select\" defaultValue={props.colours[0]} />              \r\n        </div>\r\n        <div id=\"brush-size-wrapper\">\r\n            <div id=\"brush-size-slider-wrapper\">\r\n              <span style={{position: 'relative', top: '-0.1rem'}}>-</span>\r\n              <input type=\"range\" id=\"brush-size-slider\" name=\"brush-size-slider\" min=\"4\" max=\"40\" />\r\n              <span style={{position: 'relative', top: '-0.1rem'}}>+</span>\r\n            </div>\r\n            <span>Brush Size</span>\r\n          </div>\r\n      </>\r\n      :<>\r\n        <div id=\"drawing-buttons-wrapper\">\r\n          <button id=\"increase-brush-button\" className=\"DrawingUIButton\" onClick={() => {if(props.brushSize < 60){ props.setBrushSize(props.brushSize + 2 ) }}}> BRUSH + <div id=\"brush-up-icon\" /></button>\r\n          <button id=\"decrease-brush-button\" className=\"DrawingUIButton\" onClick={() => {if(props.brushSize > 2){ props.setBrushSize(props.brushSize - 2 ) }}}> BRUSH - <div id=\"brush-down-icon\" /></button>\r\n          <button id=\"erase-brush-button\" className=\"DrawingUIButton\" onClick={() => props.toggleEraser()}> ERASER <div id=\"eraser-icon\" /></button>\r\n          <button id=\"undo-button\" className=\"DrawingUIButton\" onClick={props.undoDrawing}> UNDO <div id=\"undo-icon\" /></button>\r\n          <button id=\"redo-button\" className=\"DrawingUIButton\" onClick={props.redoDrawing}> REDO <div id=\"redo-icon\" /></button>              \r\n        </div>\r\n      </>\r\n    }    \r\n    </>)\r\n}\r\nfunction UndoIcon(){\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 100 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"AudioPlayerIcon\">\r\n        <defs>\r\n          <marker id=\"arrowhead\" markerWidth=\"5\" markerHeight=\"5\" strokeWidth=\"0\" fill=\"white\"\r\n          refX=\"0\" refY=\"2.5\" orient=\"auto\">\r\n            <polygon points=\"0 0, 5 2.5, 0 5\" />\r\n          </marker>\r\n        </defs>\r\n        <path fill=\"none\" strokeLinecap=\"round\" strokeWidth=\"6\" stroke=\"white\" marker-end=\"url(#arrowhead)\"\r\n              d=\" M 30,80\r\n                  L 65,80\r\n                  A 15 15 0 1 0 65,28\r\n                  L 30,28\r\n                  \" />\r\n    </svg>\r\n  )\r\n}\r\nfunction RedoIcon(){\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 100 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"AudioPlayerIcon\">\r\n        <defs>\r\n          <marker id=\"arrowhead2\" markerWidth=\"5\" markerHeight=\"5\" strokeWidth=\"0\" fill=\"white\"\r\n          refX=\"0\" refY=\"2.5\" orient=\"auto\">\r\n            <polygon points=\"0 0, 5 2.5, 0 5\" />\r\n          </marker>\r\n        </defs>\r\n        <path fill=\"none\" strokeLinecap=\"round\" strokeWidth=\"6\" stroke=\"white\" marker-end=\"url(#arrowhead2)\"\r\n              d=\" M 70,80\r\n                  L 35,80\r\n                  A 15 15 0 0 1 35,28\r\n                  L 70,28\r\n                  \" />\r\n    </svg>\r\n  )\r\n}\r\nfunction EraserIcon(){\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 100 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className=\"AudioPlayerIcon\"\r\n      fill='none'\r\n      stroke='white'\r\n      strokeWidth='3'\r\n      >\r\n        <rect x=\"10\" y=\"60\" width=\"40\" height=\"20\" />\r\n        <polygon points=\"10,60 50,60 85,20 45,20\" fill=\"yellow\" stroke-linejoin=\"bevel\" />\r\n        <polygon points=\"50,80 50,60 85,20 85,40\" fill=\"yellow\" stroke-linejoin=\"bevel\" />\r\n      \r\n    </svg>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class SettingsMenu extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"settings-menu-wrapper\">\r\n      <button id=\"settings-menu-button\">MENU</button>\r\n      <div id=\"settings-dropdown\">\r\n        <button id=\"settings-info-button\" onClick={this.props.overlayToggle}>INFO</button>\r\n        {/* <button id=\"settings-graphics-button\">GRAPHICS</button>\r\n          <div id=\"graphics-dropdown\">\r\n            <button className=\"GraphicsButton\">LOW</button>\r\n            <button className=\"GraphicsButton\">MEDIUM</button>\r\n            <button className=\"GraphicsButton\">HIGH</button>\r\n          </div> */}\r\n        <button id=\"settings-focus-button\" onClick={this.props.toggleFocus}>FOCUS</button>\r\n      </div>\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SettingsMenu\r\n","import React, { Component } from 'react';\r\nimport { Shaders, Node, GLSL, NearestCopy} from \"gl-react\";\r\nimport { Surface } from \"gl-react-dom\";\r\n\r\nexport const shaders = Shaders.create({\r\n  onecolour: {\r\n    frag: GLSL`\r\n    // based on Inigo Quilez noise shader https://www.shadertoy.com/view/XdXGW8\r\n    precision highp float;\r\n    varying vec2 uv;\r\n    uniform float width;\r\n    uniform float height;\r\n    uniform float timer;\r\n    const vec3 ycol = vec3(.824,.953,.91);\r\n    const vec3 lcol = vec3(.961,.652,.266);\r\n    const vec3 rcol = vec3(.184,.219,.297);\r\n    \r\n    vec2 hash( vec2 x ) {\r\n      const vec2 k = vec2( 0.3183099, 0.3678794 );\r\n      x = x*k + k.yx;\r\n      return -1.0 + 2.0*fract( 16.0 * k*fract( x.x*x.y*(x.x+x.y)) );\r\n    }\r\n\r\n    float noise( in vec2 p ) {\r\n      vec2 i = floor( p );\r\n      vec2 f = fract( p );\t\r\n\t    vec2 u = f*f*(3.0-2.0*f);\r\n      return mix( mix( dot( hash( i + vec2(0.0,0.0) ), f - vec2(0.0,0.0) ), \r\n                       dot( hash( i + vec2(1.0,0.0) ), f - vec2(1.0,0.0) ), u.x),\r\n                  mix( dot( hash( i + vec2(0.0,1.0) ), f - vec2(0.0,1.0) ), \r\n                       dot( hash( i + vec2(1.0,1.0) ), f - vec2(1.0,1.0) ), u.x), u.y);\r\n    }\r\n\r\n    void main() {\r\n      vec2 res = vec2(width,height);\r\n      vec2 st = gl_FragCoord.xy / res;\r\n      vec2 translate = vec2(0.,0.5*timer);\r\n      if (fract( st.y * 0.5) > 0.4  || fract( st.y * 0.5) < 0.2){\r\n        st.x += translate.y*0.35; }\r\n      else {\r\n        if (fract( st.x * 0.5) > 0.2 || fract( st.x * 0.5) < 0.3){\r\n          st.x -= timer*0.5; }\r\n        else {\r\n          st.x += timer*0.35; }\r\n      }\r\n      if (fract( st.y * 0.5) > 0.8 || fract( st.y * 0.5) < 0.6){\r\n        st.x += translate.y*0.35; }\r\n      else {\r\n        if (fract( st.x * 0.5) < 0.4 || fract( st.x * 0.5) > 0.3){\r\n          st.x -= timer*0.5; }\r\n        else {\r\n          st.x += timer*0.35; }\r\n      }      \r\n      float f = noise( 2.0*st );\r\n      f = 1.-(0.6 + 0.2*f);\r\n      vec3 ycol = ycol * (0.5 * sin(timer));\r\n\r\n      gl_FragColor = vec4(min(mix(ycol,mix(rcol,lcol,uv.x-0.2),uv.y+0.2), vec3(f,f,f)), 1.0);\r\n    }`\r\n}});\r\n\r\nexport class GLVis extends Component {\r\n  render() {\r\n    return <>\r\n    <Surface width={this.props.width*0.75} height={this.props.height*0.68}>\r\n\r\n      <NearestCopy>\r\n        <Node shader={shaders.onecolour} ignoreUnusedUniforms uniforms={{timer: this.props.timer, width: this.props.width*0.075, height: this.props.width*0.068}} width={this.props.width*0.075} height={this.props.height*0.068} /> \r\n      </NearestCopy>\r\n                              \r\n    </Surface>\r\n    </>;\r\n  }\r\n}\r\n\r\nexport default GLVis;\r\n","import React, { useEffect, useRef, useState } from 'react'\r\n\r\nexport default function ResponseDisplay(props) {\r\n  \r\n  //length between displaying the responses\r\n  const responseLoopDelay = 1000;\r\n\r\n  // time for fade in/out and for how long the response is visible in ms\r\n  const responseFadeTime = 1500;\r\n  const responseHangTime = 15000;\r\n\r\n  const [responsesToDisplay, setResponsesToDisplay] = useState([]);\r\n  const responsesToDisplayRef = useRef();\r\n  const responsesDisplaying = useRef(false);\r\n\r\n  const displaysOnScreen = 3;\r\n\r\n  // useeffect to run only after the first time responses to display is updated to contain responses, not the following times it's order is updated\r\n  useEffect(() => {\r\n    if(responsesToDisplay.length > 0 && !responsesDisplaying.current){\r\n      for(let i = 0; i < displaysOnScreen; i++){\r\n        setTimeout(displayNextResponse, responseFadeTime*i);\r\n      }      \r\n      responsesDisplaying.current = true;\r\n    }\r\n    responsesToDisplayRef.current = responsesToDisplay;\r\n  }, [responsesToDisplay]);\r\n\r\n  // run loop once new response data arrives\r\n  useEffect(() => {\r\n    if(props.responseData.length > 0){\r\n      setResponsesToDisplay(props.responseData);\r\n      responsesToDisplayRef.current = props.responseData;\r\n    }\r\n  }, [props.responseData]);\r\n\r\n  return (\r\n    <div id=\"response-wrapper\"></div>\r\n  )\r\n\r\n  function displayNextResponse(){\r\n    let modOrderResponses = Array.from(responsesToDisplayRef.current);\r\n    let nextResponse = modOrderResponses.pop();\r\n    if(nextResponse[1] === 'image'){\r\n      createImageResponseDisplay(nextResponse[0]);\r\n    } else {\r\n      createTextResponseDisplay(nextResponse[0]);\r\n    }\r\n    setResponsesToDisplay([nextResponse].concat(modOrderResponses));\r\n  }\r\n\r\n  function createImageResponseDisplay(imageResponse){\r\n    let newResponseBox = document.createElement('img');\r\n    let collision = false;\r\n    newResponseBox.classList.add('ImageResponseBox');\r\n    let xRandom = Math.random();\r\n    let yRandom = Math.random();\r\n    newResponseBox.addEventListener(\"load\", (e) => {\r\n      // add to the page\r\n      document.getElementById('response-wrapper').appendChild(newResponseBox);\r\n      let responseBoxDimensions = newResponseBox.getBoundingClientRect();\r\n      newResponseBox.style.left = (80 * xRandom) + \"%\";\r\n      newResponseBox.style.top = ((100 - (props.height / responseBoxDimensions.height)) * yRandom) + \"%\";\r\n      let colliderArray = Array.from(document.getElementsByClassName(\"Collider\"));\r\n      for (let i = 0; i < colliderArray.length; i++) {\r\n        if(detect2DBoxCollision(newResponseBox.getBoundingClientRect(), colliderArray[i].getBoundingClientRect()) && !collision){\r\n          collision = true;\r\n        }\r\n      }\r\n      if(collision){\r\n        newResponseBox.remove();\r\n        window.requestAnimationFrame(() => createImageResponseDisplay(imageResponse));\r\n        console.log(\"loop\");\r\n      } else {\r\n        newResponseBox.classList.add(\"Collider\");\r\n        responseFadeInOut(newResponseBox);\r\n      } \r\n    });\r\n    newResponseBox.src = 'https://humstore.thelongesthum.world/'+imageResponse;\r\n  }\r\n\r\n  function createTextResponseDisplay(textResponse){\r\n    let newResponseBox = document.createElement('p');\r\n    let collision = false;\r\n    newResponseBox.innerHTML = textResponse;\r\n    newResponseBox.classList.add('TextResponseBox');\r\n    let xRandom = Math.random();\r\n    let yRandom = Math.random();\r\n    document.getElementById('response-wrapper').appendChild(newResponseBox);\r\n    let responseBoxDimensions = newResponseBox.getBoundingClientRect();\r\n    newResponseBox.style.left = (80 * xRandom) + \"%\";\r\n    newResponseBox.style.top = ((100 - (props.height / responseBoxDimensions.height)) * yRandom) + \"%\";\r\n    let colliderArray = Array.from(document.getElementsByClassName(\"Collider\"));\r\n    for (let i = 0; i < colliderArray.length; i++) {\r\n      if(detect2DBoxCollision(newResponseBox.getBoundingClientRect(), colliderArray[i].getBoundingClientRect()) && !collision){\r\n        collision = true;\r\n      }\r\n    }\r\n    if(collision){\r\n      newResponseBox.remove();\r\n      window.requestAnimationFrame(() => createTextResponseDisplay(textResponse));\r\n    } else {\r\n      newResponseBox.classList.add(\"Collider\");\r\n      responseFadeInOut(newResponseBox);\r\n    } \r\n  }\r\n\r\n  function responseFadeInOut(responseElement){\r\n    responseElement.style.transition = responseFadeTime + \"ms\";\r\n    setTimeout(() =>{\r\n      // responseElement.classList.add('FadeIn');\r\n      responseElement.style.opacity = 1;\r\n      setTimeout(() => {responseElement.style.opacity = 0;}, responseHangTime);\r\n      setTimeout(() => {responseElement.remove(); displayNextResponse();}, responseFadeTime + responseHangTime + 100);\r\n    }, 100);\r\n  }\r\n}\r\n\r\nfunction detect2DBoxCollision(box1, box2){\r\n  let collision = false;\r\n  if(box1.left < box2.right &&\r\n     box1.right > box2.left &&\r\n     box1.top < box2.bottom &&\r\n     box1.bottom > box2.top) {\r\n      collision = true;\r\n      console.log(\"hit\");\r\n    }\r\n  return collision;\r\n}\r\n","import React, { useEffect } from 'react';\r\n\r\nexport default function ColourPicker(props){\r\n\r\n  useEffect(() => {\r\n    document.getElementById('col1Select').addEventListener(\"input\", colourInputChange, false);\r\n    document.getElementById('col2Select').addEventListener(\"input\", colourInputChange, false);\r\n    document.getElementById('col3Select').addEventListener(\"input\", colourInputChange, false);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button id=\"col-swap-button\" onClick={() => colourSwap()}>\r\n        <SwapIcon />\r\n      </button>\r\n      <span id=\"word-change\">CHANGE</span>\r\n      <span id=\"word-colour\">COLOUR</span>\r\n      <div id=\"col-select-wrapper\">\r\n        <input type=\"color\" id=\"col1Select\" className=\"col-select first\" name=\"col1Select\" defaultValue={props.colours[0]} />\r\n        <input type=\"color\" id=\"col2Select\" className=\"col-select second\" name=\"col23Select\" defaultValue={props.colours[1]} />\r\n        <input type=\"color\" id=\"col3Select\" className=\"col-select third\" name=\"col33Select\" defaultValue={props.colours[2]} />\r\n      </div>\r\n    </>      \r\n  )\r\n\r\n  function colourSwap(e){\r\n    let selectors = document.getElementsByClassName(\"col-select\");\r\n    for (let i = 0; i < 3; i++){\r\n      let cl = selectors[i].classList;\r\n      switch(true){\r\n        case cl.contains('first'):\r\n        cl.remove('first');\r\n        cl.add('third');\r\n        break;\r\n        case cl.contains('second'):\r\n        cl.remove('second');\r\n        cl.add('first');\r\n        break;\r\n        case cl.contains('third'):\r\n        cl.remove('third');\r\n        cl.add('second');\r\n        break;\r\n        default:\r\n        break;\r\n      }\r\n    }\r\n    props.setCurrentColours([\r\n      props.colours[1],\r\n      props.colours[2],\r\n      props.colours[0]\r\n    ]);\r\n  }\r\n  function colourInputChange(e){\r\n    let colNum = parseInt(e.target.id.charAt(3));\r\n    document.documentElement.style.setProperty('--comp-col-0'+colNum, e.target.value);\r\n    let newColours = props.colours;\r\n    newColours[colNum - 1] = e.target.value;\r\n    props.setCurrentColours(newColours);\r\n  }\r\n}\r\n\r\n/* expecting a 5:1 aspect ratio */\r\nfunction SwapIcon(){\r\n  return (\r\n    <svg\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      viewBox=\"0 0 100 100\"\r\n      xmlns=\"http://www.w3.org/2000/svg\" >\r\n        {/* Arrow Head */}\r\n        <marker id=\"arrowhead\" markerWidth=\"10\" markerHeight=\"6\" refX=\"7\" refY=\"3\" orient=\"auto\">\r\n          <polygon points=\"0 0, 8 3.5, 0 6\" />\r\n        </marker>\r\n        {/* <rect width=\"100%\" height=\"100%\" fill=\"red\" /> */}\r\n        {/* <rect width=\"100%\" height=\"1%\" y=\"50%\" fill=\"blue\" />\r\n        <rect width=\"1%\" height=\"100%\" x=\"25%\" fill=\"blue\" /> */}\r\n        {/* Line */}\r\n        <path fill=\"none\" strokeWidth=\"8\" markerEnd=\"url(#arrowhead)\" \r\n              d=\" M 25, 50\r\n                  L 0,13.4 100,13.4 50,86.6\r\n                  \" />\r\n        {/* <path fill=\"none\" stroke=\"black\" strokeWidth=\"2\" marker-end=\"url(#arrowhead)\"\r\n              d=\" M 35,15\r\n                  L 17.5,15 17.5,5 82.5,5 82.5,15 65,15\" /> */}\r\n    </svg>\r\n  )\r\n}\r\n\r\n","import React, { Component, useState, useEffect, useRef } from 'react';\r\nimport AudioControls from './audioControls';\r\nimport DrawingCanvas from './drawingCanvas';\r\nimport IntroModal from './introModal';\r\nimport Marquee from './marquee';\r\nimport DrawingTools from './drawingTools';\r\nimport SettingsMenu from './settingsMenu';\r\nimport GLVis from './glVis';\r\nimport ResponseDisplay from './responseDisplay';\r\nimport { InfoOverlay } from './infoOverlay';\r\nimport ColourPicker from './colourPicker';\r\n\r\nexport default function DesktopApp(props){\r\n\r\n  const [currentModalPage, setCurrentModalPage] = useState(1);\r\n\r\n  // graphics settings  - 1 high 10 medium 20 low\r\n  const[graphicsSettings, setGraphicsSettings] = useState(1);\r\n\r\n  return (\r\n    <div id=\"desktop-wrapper\">\r\n      {props.modalIsOpen\r\n        ? <IntroModal \r\n            currentModalPage={currentModalPage}\r\n            setCurrentModalPage={setCurrentModalPage}\r\n            toggleModal={props.toggleModal} />\r\n        : <>\r\n          {/* Background Visuals */} \r\n          <div id=\"bg-vis-wrapper\">\r\n          </div>\r\n          {/* dead simple text chat */}\r\n          <iframe title=\"text chat\" id=\"chat\" src='https://deadsimplechat.com/34MeFCATo'></iframe>\r\n          {/* Response Overlay */}\r\n          <ResponseDisplay \r\n            responseData={props.responseData}\r\n            height={props.height}\r\n            width={props.width} />\r\n          {/* Prompt and Input Selection Overlay */}\r\n          <div id=\"current-prompt-wrapper\">\r\n            <div id=\"prompt-end-timer-wrapper\">\r\n              <div id=\"prompt-end-timer\" />\r\n              <div id=\"prompt-end-timer-overlay\" />\r\n            </div>           \r\n            <div id=\"current-prompt\">\r\n              {props.currentPrompt}\r\n            </div>           \r\n            <div id=\"input-select-wrapper\">\r\n              <span id=\"input-select\">I would like to&nbsp;\r\n              <button id=\"draw-input-select\" className=\"InputSelectButton\" onClick={() => props.setInput(true)}>draw</button>&nbsp;/&nbsp;\r\n              <button id=\"text-input-select\" className=\"InputSelectButton ActiveInputButton\" onClick={() => props.setInput(false)}>write</button>\r\n              &nbsp;a response</span>\r\n            </div>           \r\n          </div>\r\n          {/* Input Section */}\r\n          <div id=\"input-wrapper\">              \r\n            <textarea id=\"text-input\" name=\"text based prompt response\" placeholder=\"Please type your response here...\" />\r\n            {/* Drawing Input */}\r\n            <DrawingCanvas \r\n              brushColour={props.colours[0]}\r\n              brushSize={props.brushSize}\r\n              setDrawingCanvas={props.setDrawingCanvas}\r\n              setCurrentCanvasState={props.setCurrentCanvasState}\r\n              setIsDrawing={props.setIsDrawing} />              \r\n          </div>\r\n          <DrawingTools\r\n            undoDrawing={props.undoDrawing}\r\n            redoDrawing={props.redoDrawing}\r\n            toggleEraser={props.toggleEraser}\r\n            colours={props.colours}\r\n            changeColourOrder={props.changeColourOrder}\r\n            changeColours={props.changeColours}\r\n            changeBrushSize={props.changeBrushSize} />  \r\n          {/* Right UI Panel */}\r\n          <div id=\"right-ui-wrapper\">\r\n          <div id=\"drawing-tools-wrapper\">                \r\n            <ColourPicker \r\n              colours={props.colours}\r\n              setCurrentColours={props.setCurrentColours} />              \r\n          </div>\r\n                        \r\n            <button id=\"response-submit-button\" onClick={props.submitResponse}>\r\n              <span>SUBMIT RESPONSE</span>                \r\n            </button>\r\n            {/* Audio Settings */}\r\n            <AudioControls />            \r\n          </div>\r\n          {/* Menu Overlay */}\r\n          <SettingsMenu\r\n            toggleFocus={props.toggleFocus} \r\n            overlayToggle={props.toggleModal} />     \r\n\r\n          {/* Top Banner */}\r\n          <Marquee\r\n            currentArtist={props.artistPresets.artistname} />  \r\n                   \r\n          \r\n          \r\n          \r\n          {/* Info Overlay */}\r\n          {/* {this.state.infoOverlay &&\r\n            <InfoOverlay overlayToggle={this.toggleInfoOverlay.bind(this)} /> } */}\r\n                            \r\n          \r\n          \r\n          \r\n        </>}\r\n    </div>\r\n  )  \r\n}\r\n","import React from 'react';\r\nimport IntroModal from './introModal';\r\nimport DrawingCanvas from './drawingCanvas';\r\nimport DrawingTools from './drawingTools';\r\nimport ColourPicker from './colourPicker';\r\n\r\n\r\nexport default function MobileApp(props){\r\n  return (\r\n    <div id=\"mobile-wrapper\">\r\n      {props.modalIsOpen\r\n        ? <IntroModal mobile={props.mobile} toggleModal={props.toggleModal} />\r\n        : <>\r\n\r\n        {/* prompt */}\r\n        <div id=\"current-prompt-wrapper\">          \r\n          <div id=\"current-prompt\">\r\n            {props.currentPrompt}\r\n          </div>\r\n        </div>\r\n        {/* input select */}\r\n        <div id=\"input-select-wrapper\">\r\n          <button id=\"draw-input-select\" className=\"InputSelectButton\" onClick={() => props.setInput(true)}>draw</button>\r\n          <button id=\"text-input-select\" className=\"InputSelectButton ActiveInputButton\" onClick={() => props.setInput(false)}>write</button>\r\n        </div>\r\n        {/* end timer */}\r\n        {/* <div id=\"prompt-end-timer-wrapper\">\r\n          <div id=\"prompt-end-timer\">this prompt will change in 60 seconds...</div>\r\n          <div id=\"prompt-end-timer-overlay\" />\r\n        </div> */}\r\n        {/* input section */}\r\n        <div id=\"input-wrapper\">              \r\n          <textarea id=\"text-input\" name=\"text based prompt response\" placeholder=\"Please type your response here...\" />\r\n          {/* Drawing Input */}\r\n          <DrawingCanvas \r\n            brushColour={props.colours[0]}\r\n            brushSize={props.brushSize}\r\n            setDrawingCanvas={props.setDrawingCanvas}\r\n            setCurrentCanvasState={props.setCurrentCanvasState}\r\n            setIsDrawing={props.setIsDrawing} />              \r\n        </div>\r\n        {/* <ColourPicker \r\n          colours={props.colours}\r\n          setCurrentColours={props.setCurrentColours} /> */}\r\n        <DrawingTools\r\n          undoDrawing={props.undoDrawing}\r\n          redoDrawing={props.redoDrawing}\r\n          toggleEraser={props.toggleEraser}\r\n          colours={props.colours}\r\n          changeColourOrder={props.changeColourOrder}\r\n          changeColours={props.changeColours}\r\n          changeBrushSize={props.changeBrushSize}\r\n          mobile={props.mobile} />\r\n        <button id=\"mobile-response-submit-button\" className=\"InputSelectButton\" onClick={props.submitResponse}>\r\n          <span>SUBMIT RESPONSE</span>                \r\n        </button>\r\n\r\n        </>}\r\n    </div>\r\n  )\r\n}\r\n","//What food would pair well with this track\r\nexport const artistPresets = [\r\n  { \"artistname\": \"Izabel ~ WORDS BY: Emile Frankel ~ VISUALS BY: Mohamed Chamas\",\r\n    \"emoji01\": require(\"./emojis/desert.png\").default,\r\n    \"emoji01width\": \"1.6vw\",\r\n    \"emoji01alt\": \"desert emoji\",\r\n    \"emoji02\": require(\"./emojis/blossoming-flower.png\").default,\r\n    \"emoji02width\": \"1.6vw\",    \r\n    \"emoji02alt\": \"blooming flower emoji\",\r\n    \"emoji03\": require(\"./emojis/mushroom.png\").default,\r\n    \"emoji03width\": \"1.6vw\",\r\n    \"emoji03alt\": \"mushroom emoji\" \r\n  },\r\n  { \"artistname\": \"Hani Hanbali ~ WORDS BY: Emile Frankel ~ VISUALS BY: Mohamed Chamas\",\r\n    \"emoji01\": require(\"./emojis/alien.png\").default,\r\n    \"emoji01width\": \"1.6vw\",\r\n    \"emoji01alt\": \"alien face emoji\",\r\n    \"emoji02\": require(\"./emojis/woozy.png\").default,\r\n    \"emoji02width\": \"1.6vw\",\r\n    \"emoji02alt\": \"woozy emoji\",\r\n    \"emoji03\": require(\"./emojis/teddy-bear.png\").default,\r\n    \"emoji03width\": \"1.6vw\",    \r\n    \"emoji03alt\": \"teddy bear emoji\"   \r\n  },\r\n  { \"artistname\": \"Hannah Wu ~ WORDS BY: Panda Wong ~ VISUALS BY: Mohamed Chamas\",\r\n    \"emoji01\": require(\"./emojis/butterfly.png\").default,\r\n    \"emoji01width\": \"1.6vw\",\r\n    \"emoji01alt\": \"butterfly emoji\",\r\n    \"emoji02\": require(\"./emojis/leaf-in-wind.png\").default,\r\n    \"emoji02width\": \"1.6vw\",\r\n    \"emoji02alt\": \"leaf in wind emoji\",\r\n    \"emoji03\": require(\"./emojis/spiral-shell.png\").default,\r\n    \"emoji03width\": \"1.6vw\",    \r\n    \"emoji03alt\": \"spiral shell emoji\" \r\n  },\r\n]","import './App.css';\r\nimport React, { Component, useEffect, useState, useRef } from 'react';\r\nimport DesktopApp from './components/desktopApp';\r\nimport MobileApp from './components/mobileApp';\r\nimport {artistPresets} from './content/preloadArrays.js';\r\nimport { fabric } from 'fabric';\r\n\r\nexport default function App(){\r\n  // is accessed on mobile\r\n  const onMobile = window.matchMedia('all and (any-hover: none)').matches;\r\n  // current window size\r\n  const [windowSize, setWindowSize] = useState([window.innerWidth, window.innerHeight]);\r\n  // is the intro modal open\r\n  //const [modalIsOpen, setModalIsOpen] = useState(true);\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  // current text prompt\r\n  const [currentPrompt, setCurrentPrompt] = useState(<>Take a deep breath, then continue to breathe along with the rhythm of the track.<br/>Draw or write your interpretation of the textures you hear.</>);\r\n  // if false it's assumed to be text instead\r\n  const[inputIsDraw, setInputIsDraw] = useState(false);\r\n  // other responses from database\r\n  const [responseData, setResponseData] = useState([]);\r\n  // current drawing colours\r\n  const [currentColours, setCurrentColours] = useState([\r\n    \"#222323\",\r\n    \"#5252ff\",\r\n    \"#b5e877\"\r\n  ]);\r\n  // drawing settings\r\n  const [brushSize, setBrushSize] = useState(8);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  var isDrawingRef = useRef(isDrawing);\r\n  useEffect(() => {isDrawingRef.current = isDrawing}, [isDrawing]);\r\n  const [isEraser, setIsEraser] = useState(false);\r\n  const [savedBrush, setSavedBrush] = useState(null);\r\n  // undo/redo settings\r\n  const maxUndo = 10;\r\n  const [drawingCanvas, setDrawingCanvas] = useState(null);\r\n  var drawingCanvasRef = useRef(drawingCanvas);\r\n  useEffect(() => {drawingCanvasRef.current = drawingCanvas}, [drawingCanvas]);\r\n  const [currentCanvasState, setCurrentCanvasState] = useState(null);\r\n  var currentCanvasStateRef = useRef(currentCanvasState);\r\n  useEffect(() => {currentCanvasStateRef.current = currentCanvasState}, [currentCanvasState]);\r\n  const [undoStack, setUndoStack] = useState([]);\r\n  const [redoStack, setRedoStack] = useState([]);\r\n  var undoStackRef = useRef(undoStack);\r\n  var redoStackRef = useRef(redoStack);\r\n  useEffect(() => {undoStackRef.current = undoStack}, [undoStack]);\r\n  useEffect(() => {redoStackRef.current = redoStack}, [redoStack]);\r\n  // is focus mode active\r\n  const [focusMode, setFocusMode] = useState(false);\r\n\r\n  // handle prompt change\r\n  const[isCountdown, setIsCountdown] = useState(false);\r\n\r\n  // my init function to run on app load\r\n  useEffect(() => {\r\n    // set up to update window dimensions on resize event\r\n    setWindowSize([window.innerWidth, window.innerHeight]);\r\n    window.addEventListener('resize', () => {\r\n      setWindowSize([window.innerWidth, window.innerHeight])});\r\n  }, []);\r\n\r\n  return (\r\n    <div id=\"global-wrapper\">\r\n      {onMobile\r\n      ? \r\n        <MobileApp\r\n          mobile={onMobile}  \r\n          modalIsOpen={modalIsOpen}\r\n          toggleModal={toggleModal}\r\n          currentPrompt={currentPrompt}\r\n          artistPresets={artistPresets[0]}\r\n          submitResponse={submitResponse}\r\n          setInput={setInput}\r\n          setIsDrawing={setIsDrawing}\r\n          colours={currentColours}\r\n          setCurrentColours={setCurrentColours}\r\n          brushSize={brushSize}\r\n          setBrushSize={setBrushSize}\r\n          toggleEraser={toggleEraser}\r\n          setDrawingCanvas={setDrawingCanvas}\r\n          setCurrentCanvasState={setCurrentCanvasState}\r\n          undoDrawing={undoDrawing}\r\n          redoDrawing={redoDrawing} />\r\n      : \r\n        <DesktopApp \r\n          mobile={onMobile}\r\n          modalIsOpen={modalIsOpen}\r\n          toggleModal={toggleModal}\r\n          toggleFocus={toggleFocus}\r\n          currentPrompt={currentPrompt}\r\n          artistPresets={artistPresets[0]}\r\n          width={windowSize[0]}\r\n          height={windowSize[1]}\r\n          submitResponse={submitResponse}\r\n          responseData={responseData}\r\n          setInput={setInput}\r\n          setIsDrawing={setIsDrawing}\r\n          colours={currentColours}\r\n          setCurrentColours={setCurrentColours}\r\n          brushSize={brushSize}\r\n          setBrushSize={setBrushSize}\r\n          toggleEraser={toggleEraser}\r\n          setDrawingCanvas={setDrawingCanvas}\r\n          setCurrentCanvasState={setCurrentCanvasState}\r\n          undoDrawing={undoDrawing}\r\n          redoDrawing={redoDrawing} />\r\n      }\r\n    </div>\r\n  )\r\n\r\n  // gets triggered when either the intro or info modal are brought up\r\n  function toggleModal(){\r\n    // add and remove event listener that triggers after drawing to save canvas to undo stack\r\n    if(modalIsOpen){\r\n      document.addEventListener('mouseup', saveCanvasState);\r\n    } else {\r\n      document.removeEventListener('mouseup', saveCanvasState);\r\n    }\r\n    // toggle state\r\n    setModalIsOpen(!modalIsOpen);\r\n  }\r\n\r\n  function toggleFocus(){\r\n    let textResponseRule = getCSSRule('.TextResponseBox');\r\n    let imageResponseRule = getCSSRule('.ImageResponseBox');\r\n    if(!focusMode){\r\n      setFocusMode(true);\r\n      textResponseRule.style.backgroundColor = \"rgb(31, 33, 28)\";\r\n      textResponseRule.style.border = \"solid white 1px\";\r\n      imageResponseRule.style.backgroundColor = \"white\";\r\n      imageResponseRule.style.border = \"solid rgb(31, 33, 28) 1px\";\r\n    } else {\r\n      setFocusMode(false);\r\n      textResponseRule.style.backgroundColor = \"\";\r\n      textResponseRule.style.border = \"\";\r\n      imageResponseRule.style.backgroundColor = \"\";\r\n      imageResponseRule.style.border = \"\";\r\n    }\r\n  }\r\n\r\n  // to change between draw and write - true = draw - false = text\r\n  function setInput(changeToDraw){\r\n    if(changeToDraw){\r\n      setInputIsDraw(true);\r\n      document.getElementById(\"drawing-canvas-wrapper\").style.zIndex = \"6\";\r\n      document.getElementById(\"draw-input-select\").classList.add(\"ActiveInputButton\");\r\n      document.getElementById(\"text-input-select\").classList.remove(\"ActiveInputButton\");\r\n    } else {\r\n      setInputIsDraw(false);\r\n      document.getElementById(\"drawing-canvas-wrapper\").style.zIndex = \"4\";\r\n      document.getElementById(\"draw-input-select\").classList.remove(\"ActiveInputButton\");\r\n      document.getElementById(\"text-input-select\").classList.add(\"ActiveInputButton\");\r\n    }\r\n  }\r\n\r\n  // toggle eraser on/off - save brush if toggled on - reset old brush if toggled off\r\n  function toggleEraser(){\r\n    if(isEraser){\r\n      drawingCanvas.freeDrawingBrush = savedBrush;\r\n      document.getElementById(\"erase-brush-button\").classList.remove(\"Active\");\r\n    } else {\r\n      setSavedBrush(drawingCanvas.freeDrawingBrush);\r\n      drawingCanvas.freeDrawingBrush = new fabric.EraserBrush(drawingCanvas);\r\n      console.log(new fabric.EraserBrush(drawingCanvas));\r\n      drawingCanvas.freeDrawingBrush.width = brushSize;\r\n      document.getElementById(\"erase-brush-button\").classList.add(\"Active\");\r\n    }\r\n    setIsEraser(!isEraser);\r\n  }\r\n  // undo/redo functions\r\n  // run on mouse up to save current canvas state to undo stack and then toggle isDrawing off\r\n  function saveCanvasState(){\r\n    // only run if mouse up is occuring after a drawing action\r\n    if(isDrawingRef.current){\r\n      // get version of undo stack to change\r\n      let newUndoStack = undoStackRef.current;\r\n      // drop oldest undo if over max undo count\r\n      if(newUndoStack.length === maxUndo){ newUndoStack.shift(); }\r\n      // add last current state stored before updating it to store the new state\r\n      newUndoStack.push(currentCanvasStateRef.current);\r\n      setCurrentCanvasState(drawingCanvasRef.current.toDatalessJSON());\r\n      // update undo stack into state, remove redo stack and then toggle isDrawing off\r\n      setUndoStack(newUndoStack);\r\n      setRedoStack([]);\r\n      setIsDrawing(false);\r\n    }\r\n  }\r\n  function undoDrawing(){\r\n    // if states left to undo\r\n    if(undoStack.length > 0){\r\n      // store state to come back to\r\n      let newCanvasState = currentCanvasState;\r\n      // push current state to redo stack\r\n      let newRedoStack = redoStackRef.current;\r\n      newRedoStack.splice(newRedoStack.length, 0, drawingCanvasRef.current.toDatalessJSON());\r\n      setRedoStack(newRedoStack);\r\n      // pop previous state from state stack\r\n      let newUndoStack = undoStackRef.current;\r\n      let newState = newUndoStack.pop();\r\n      // update to previous states and both stacks\r\n      setCurrentCanvasState(newState);\r\n      setUndoStack(newUndoStack);\r\n      // update actual canvas\r\n      drawingCanvas.loadFromJSON(newCanvasState);\r\n    }\r\n  }\r\n  function redoDrawing(){\r\n    // if states left to redo\r\n    if(redoStack.length > 0){\r\n      // pop new state from redo stack\r\n      let newRedoStack = redoStackRef.current;\r\n      let newCanvasState = newRedoStack.pop();\r\n      // push current state to undo stack\r\n      let newUndoStack = undoStackRef.current;\r\n      newUndoStack.push(currentCanvasStateRef.current);\r\n      setUndoStack(newUndoStack);\r\n      // update current state\r\n      setCurrentCanvasState(drawingCanvas.toDatalessJSON());\r\n      setRedoStack(newRedoStack);\r\n      // update actual canvas\r\n      drawingCanvas.loadFromJSON(newCanvasState);      \r\n    }\r\n  }\r\n  // on prompt update give a timer\r\n  function startPromptCountdown(newPrompt){\r\n    if(!isCountdown){\r\n      setIsCountdown(true);\r\n      let promptTimer = document.getElementById(\"prompt-end-timer-wrapper\").children[0];\r\n      let promptTimerOverlay = document.getElementById(\"prompt-end-timer-wrapper\").children[1];\r\n      promptTimerOverlay.style.transition = \"60s linear\";\r\n      promptTimerOverlay.style.width = \"100%\";\r\n      let countdown = 60;\r\n      promptTimer.innerHTML = \"this prompt will change in \" + countdown + \" seconds...\";\r\n      let x = setInterval(() => {    \r\n        countdown -= 1;\r\n        promptTimer.innerHTML = \"this prompt will change in \" + countdown + \" seconds...\";\r\n        if (countdown < 1) {\r\n          clearInterval(x);\r\n          promptTimerOverlay.style.transition = \"0s linear\";\r\n          promptTimerOverlay.style.width = \"0%\";\r\n          promptTimer.innerHTML = \"\";\r\n          setCurrentPrompt(newPrompt);\r\n          setIsCountdown(false);   \r\n        }\r\n      }, 1000);\r\n    }    \r\n  }\r\n\r\n  function submitResponse(){\r\n    // set up array to push other responses to\r\n    let returnedResponses = [];\r\n    // check if a text or an image response\r\n    if(inputIsDraw){\r\n      //image input\r\n      let imageInput = document.getElementById('drawing-canvas');\r\n      var dataURL = imageInput.toDataURL({\r\n        format: 'png',\r\n        left: 0,\r\n        top: 0,\r\n        width: imageInput.width,\r\n        height: imageInput.height\r\n      });\r\n      const formData = new FormData();\r\n      let imageFile = dataURLtoFile(dataURL, 'response.png');\r\n      drawingCanvas.clear();\r\n      // we add one to cycle pos to keep start from 1\r\n      /* formData.append('upload', imageFile, 'cycle_'+ (cyclePos+1) +'_response.png'); */\r\n      fetch(`http://localhost:33061/api/insertImageReflectionGetResponses`, {\r\n        method: 'PUT',\r\n        body: formData\r\n      })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        try{\r\n          for(const response of res.data) {\r\n            returnedResponses.push([response.RESPONSE, response.RESPONSE_TYPE]);\r\n          }\r\n          setResponseData(returnedResponses);\r\n        } catch(e) {\r\n          // if response not the data\r\n          console.log(e);\r\n        }\r\n        });\r\n    } else {\r\n      // text input\r\n      let textInput = document.getElementById('text-input');\r\n      let responseText = textInput.value;\r\n      if(responseText.length > 0){\r\n        textInput.value = '';\r\n        /* fetch(`http://localhost:33061/api/insertTextReflectionGetResponses`, { */\r\n        fetch(`http://localhost:33061/api/testLookup`, {\r\n          headers: { 'Content-type': 'application/json' },\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          // we add one to cycle pos to keep start from 1\r\n          /* body: JSON.stringify({reflection: responseText, cycleTable: cyclePos+1}) */\r\n        })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        try{\r\n          for(const response of res.data) {\r\n            returnedResponses.push([response.RESPONSE, response.RESPONSE_TYPE]);         \r\n          }\r\n          setResponseData(returnedResponses);\r\n        } catch(e) {\r\n          // if response not the data\r\n          console.log(e);\r\n        }\r\n        });      \r\n      }\r\n    }\r\n  }\r\n\r\n  function dataURLtoFile(dataurl, filename){\r\n    var arr = dataurl.split(','),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new File([u8arr], filename, {\r\n      type: mime\r\n    });\r\n  }\r\n\r\n  function getCSSRule(ruleName) {\r\n    ruleName = ruleName.toLowerCase();\r\n    var result = null;\r\n    var find = Array.prototype.find;\r\n\r\n    find.call(document.styleSheets, styleSheet => {\r\n        result = find.call(styleSheet.cssRules, cssRule => {\r\n            return cssRule instanceof CSSStyleRule \r\n                && cssRule.selectorText.toLowerCase() === ruleName;\r\n        });\r\n        return result != null;\r\n    });\r\n    return result;\r\n  }\r\n}\r\n\r\nexport class App2 extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      // is on mobile\r\n      mobile: window.matchMedia('all and (any-hover: none)').matches,\r\n\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n\r\n      // turn on/off different layers\r\n      modalIsOpen: true,\r\n\r\n      // schedule data\r\n      currentArtist: null,\r\n      currentPrompt: null,\r\n      promptType: 'draw',\r\n      promptCountdown: false,\r\n      emoji1: require(\"./content/emojis/alien.png\"),\r\n      emoji2: require(\"./content/emojis/alien.png\"),\r\n      emoji3: require(\"./content/emojis/alien.png\"),\r\n      // how often it updates\r\n      // let's start at 5 sec\r\n      scheduleLoopTime: 5000,\r\n\r\n      // Response Data\r\n      responsesToDisplay: false,\r\n      unseenResponses: [],\r\n      lastResponseID: 0,\r\n      drawingResponse: false,\r\n\r\n      // undo/redo settings\r\n      maxUndo: 10,\r\n      drawingCanvas: null,\r\n      redoStack: [],\r\n      stateStack: [],\r\n      currentCanvasState: null,\r\n\r\n      // ui & painter palette\r\n      colours: {\r\n        colour1: \"#222323\",\r\n        colour2: \"#5252ff\",\r\n        colour3: \"#b5e877\"},      \r\n      \r\n      // drawing settings\r\n      brushSize: 8,\r\n\r\n      isDrawing: false,\r\n      isEraser: false,\r\n      savedBrush: null,\r\n\r\n      focusMod: false\r\n    }\r\n    // bind func's to this\r\n    this.setCanvas = this.setCanvas.bind(this);\r\n    this.saveCanvasState = this.saveCanvasState.bind(this);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.updateEmojis = this.updateEmojis.bind(this);\r\n    this.updateSchedule = this.updateSchedule.bind(this);\r\n    this.getNextResponse = this.getNextResponse.bind(this);\r\n    this.submitResponse = this.submitResponse.bind(this);\r\n    this.setIsDrawing = this.setIsDrawing.bind(this);\r\n    this.toggleEraser = this.toggleEraser.bind(this);\r\n    this.undoDrawing = this.undoDrawing.bind(this);\r\n    this.redoDrawing = this.redoDrawing.bind(this);\r\n    this.setDrawInput = this.setDrawInput.bind(this);\r\n    this.setWriteInput = this.setWriteInput.bind(this);\r\n    this.startPromptCountdown = this.startPromptCountdown.bind(this);\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"global-wrapper\">\r\n        {this.state.mobile\r\n        ? <MobileApp\r\n            modalIsOpen={false}\r\n            toggleModal={this.toggleModal}\r\n            mobile={this.state.mobile}\r\n            currentPrompt={this.state.currentPrompt}\r\n            drawingInput={this.state.drawingInput}\r\n          />\r\n        : <DesktopApp \r\n            modalIsOpen={this.state.modalIsOpen}\r\n            toggleModal={this.toggleModal}\r\n            toggleFocus={this.toggleFocus.bind(this)}\r\n            mobile={this.state.mobile}\r\n            currentPrompt={this.state.currentPrompt}\r\n            promptType={this.state.promptType}\r\n            currentArtist={this.state.currentArtist}\r\n            height={this.state.height}\r\n            width={this.state.width}\r\n            artistPresets={artistPresets}\r\n            emoji1={this.state.emoji1}\r\n            emoji2={this.state.emoji2}\r\n            emoji3={this.state.emoji3}\r\n            submitResponse={this.submitResponse}\r\n            getNextResponse={this.getNextResponse}\r\n            responsesToDisplay={this.state.responsesToDisplay}\r\n            setCanvas={this.setCanvas}\r\n            changeBrushSize={this.changeBrushSize.bind(this)}\r\n            colours={this.state.colours}\r\n            brushSize={this.state.brushSize}\r\n            setIsDrawing={this.setIsDrawing}\r\n            changeColourOrder={this.changeColourOrder.bind(this)}\r\n            changeColours={this.changeColours.bind(this)}\r\n            undoDrawing={this.undoDrawing.bind(this)}\r\n            redoDrawing={this.redoDrawing.bind(this)}\r\n            toggleEraser={this.toggleEraser.bind(this)}\r\n            setDrawInput={this.setDrawInput}\r\n            setWriteInput={this.setWriteInput}\r\n            drawingResponse={this.state.drawingResponse}\r\n          />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  componentDidMount() {  \r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    // run start up processes based on mob/desk\r\n    if (this.state.mobile){\r\n      //MOBILE\r\n    } else {\r\n      //DESKTOP\r\n      //this.initSchedule();\r\n    }\r\n  }\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n  toggleModal() {\r\n    if(this.state.modalIsOpen){\r\n      this.setState({ modalIsOpen: false });\r\n      //this.updateSchedule();\r\n      document.addEventListener('mouseup', this.saveCanvasState);\r\n    } else {\r\n      this.setState({ modalIsOpen: true });\r\n      document.removeEventListener('mouseup', this.saveCanvasState);\r\n    }\r\n  }\r\n  /* Desktop DB Connections */\r\n  // init db and then triger update loop\r\n  initSchedule(){\r\n    fetch(`https://room2.fm/api/getScheduleInit`, {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      method: 'GET',\r\n      mode: 'cors'\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => this.setStateFromDB(res.data));\r\n  }\r\n  updateSchedule(){\r\n    fetch(`https://room2.fm/api/getScheduleUpdate`, {\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify({ lastResponseID: this.state.lastResponseID})\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.setStateFromDB(res.data);\r\n      });\r\n    setTimeout(this.updateSchedule, this.state.scheduleLoopTime);\r\n  }\r\n  setStateFromDB(data) {\r\n    /* console.log(data); */\r\n    let scheduleData = data[0][0];\r\n    let responseData = data[1];\r\n    // if new artist\r\n    if(scheduleData.currentArtist !== this.state.currentArtist){\r\n      // if artist changed get new emojis\r\n      this.updateEmojis(scheduleData.emoji1, scheduleData.emoji2, scheduleData.emoji3);\r\n      this.setState({\r\n        currentArtist: scheduleData.currentArtist\r\n      })\r\n    }\r\n    // if new prompt\r\n    if(scheduleData.currentPrompt !== this.state.currentPrompt){\r\n      if(document.getElementById(\"prompt-end-timer-wrapper\")){\r\n        this.startPromptCountdown(scheduleData.currentPrompt);\r\n      } else {\r\n        this.setState({  \r\n          currentPrompt: scheduleData.currentPrompt,\r\n          promptType: scheduleData.promptType\r\n        })\r\n      }     \r\n    }\r\n    // if new responses    \r\n    if (responseData.length){\r\n      let newResponses = [];\r\n      responseData.forEach(response => newResponses.push([response.RESPONSE, response.RESPONSE_TYPE]));\r\n      this.setState(prevState => ({\r\n        unseenResponses: prevState.unseenResponses.concat(newResponses),\r\n        responsesToDisplay: true,\r\n        lastResponseID: responseData[responseData.length-1].id\r\n      }))\r\n    } \r\n  }\r\n  updateEmojis(emoji1, emoji2, emoji3){\r\n    fetch(`https://room2.fm/api/getEmojisUpdate`, {\r\n      headers: { 'Content-type': 'application/json' },\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify({emoji1: emoji1, emoji2: emoji2, emoji3: emoji3})\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => { this.setState({\r\n        emoji1: { alt: res.data[0].altText, src: res.data[0].emojiString },\r\n        emoji2: { alt: res.data[1].altText, src: res.data[1].emojiString },\r\n        emoji3: { alt: res.data[2].altText, src: res.data[2].emojiString }\r\n      }) });\r\n  }\r\n  /* submitTextResponse(){\r\n    let textInput = document.getElementById('text-input');\r\n    let responseText = textInput.value;\r\n    textInput.value = '';\r\n    fetch(`http://localhost:33061/api/insertTextResponse`, {\r\n      headers: { 'Content-type': 'application/json' },\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify({reflectText: responseText})\r\n    })\r\n    .then(response => console.log(response.json()));\r\n  }\r\n  submitImageResponse(){\r\n    let imageInput = document.getElementById('drawing-canvas');\r\n    var dataURL = imageInput.toDataURL({\r\n      format: 'png',\r\n      left: 0,\r\n      top: 0,\r\n      width: imageInput.width,\r\n      height: imageInput.height\r\n    });\r\n    const formData = new FormData();\r\n    let imageFile = this.dataURLtoFile(dataURL, 'response.png');\r\n    this.state.drawingCanvas.clear();\r\n    formData.append('upload', imageFile, 'response.png');\r\n    fetch('http://localhost:33061/api/insertImageResponse', {\r\n      method: 'PUT',\r\n      body: formData\r\n    })\r\n    .then(response => response.json())\r\n    .then(result => { console.log('Success:', result); })\r\n    .catch(error => { console.error('Error:', error); });\r\n  } */\r\n\r\n  submitResponse(){\r\n    if(this.state.drawingResponse){\r\n      // image response\r\n      if(this.state.stateStack.length > 0){\r\n        let imageInput = document.getElementById('drawing-canvas');\r\n        var dataURL = imageInput.toDataURL({\r\n          format: 'png',\r\n          left: 0,\r\n          top: 0,\r\n          width: imageInput.width,\r\n          height: imageInput.height\r\n        });\r\n        const formData = new FormData();\r\n        let imageFile = this.dataURLtoFile(dataURL, 'response.png');\r\n        this.state.drawingCanvas.clear();\r\n        formData.append('upload', imageFile, 'response.png');\r\n        fetch('https://room2.fm/api/insertImageResponse', {\r\n          method: 'PUT',\r\n          body: formData\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => { console.log('Success:', result); })\r\n        .catch(error => { console.error('Error:', error); });\r\n        this.resetUndoStack();\r\n      }      \r\n    } else {\r\n      // text response\r\n      let textInput = document.getElementById('text-input');\r\n      let responseText = textInput.value;\r\n      if(responseText.length > 0){\r\n        textInput.value = '';\r\n        fetch(`https://room2.fm/api/insertTextResponse`, {\r\n          headers: { 'Content-type': 'application/json' },\r\n          method: 'POST',\r\n          mode: 'cors',\r\n          body: JSON.stringify({reflectText: responseText})\r\n        })\r\n        .then(response => console.log(response.json()));\r\n      }      \r\n    }    \r\n  }\r\n  getNextResponse(){\r\n    let oldestResponse = null;\r\n    if(this.state.unseenResponses.length === 0){\r\n      this.setState({ responsesToDisplay: false });\r\n    } else {\r\n      let updatedResponseArray = this.state.unseenResponses;\r\n      oldestResponse = updatedResponseArray.shift();\r\n      this.setState({unseenResponses: updatedResponseArray});      \r\n    }\r\n    return oldestResponse;   \r\n  }\r\n  setDrawInput(){\r\n    this.setState({drawingResponse: true});\r\n    document.getElementById(\"drawing-canvas-wrapper\").style.zIndex = \"4\";\r\n    document.getElementById(\"text-input\").style.zIndex = \"3\";\r\n    document.getElementsByClassName(\"ActiveInputButton\")[0].classList.remove(\"ActiveInputButton\");\r\n    document.getElementById(\"draw-input-select\").classList.add(\"ActiveInputButton\");\r\n  }\r\n  setWriteInput(){\r\n    this.setState({drawingResponse: false});\r\n    document.getElementById(\"drawing-canvas-wrapper\").style.zIndex = \"3\";\r\n    document.getElementById(\"text-input\").style.zIndex = \"4\";\r\n    document.getElementsByClassName(\"ActiveInputButton\")[0].classList.remove(\"ActiveInputButton\");\r\n    document.getElementById(\"text-input-select\").classList.add(\"ActiveInputButton\");\r\n  }\r\n  changeColourOrder(){\r\n    let newColourOrder = {\r\n      colour1: this.state.colours.colour2,\r\n      colour2: this.state.colours.colour3,\r\n      colour3: this.state.colours.colour1,\r\n    };\r\n    this.setState({ colours: newColourOrder });\r\n  }\r\n  changeColours(colourSelect, newColour){\r\n    let newColours = this.state.colours;\r\n    newColours[colourSelect] = newColour;\r\n    this.setState({ colours: newColours });\r\n  }\r\n  /* changeBrushSize(newSize){\r\n    this.setState({ brushSize: newSize });\r\n  } */\r\n  changeBrushSize = (e) =>{\r\n    if(e.target.id === \"increase-brush-button\"){\r\n      if(this.state.brushSize < 20){        \r\n        this.setState(prevState => ({ brushSize: prevState.brushSize + 2}))\r\n      }      \r\n    }  else if(this.state.brushSize > 2) {\r\n        this.setState(prevState => ({ brushSize: prevState.brushSize - 2}))\r\n    } \r\n  }\r\n  toggleEraser(){\r\n    let canvas = this.state.drawingCanvas;\r\n    if(!this.state.isEraser){\r\n      this.setState({ isEraser: true, savedBrush: canvas.freeDrawingBrush }, () => {\r\n        canvas.freeDrawingBrush = new fabric.EraserBrush(canvas);\r\n        canvas.freeDrawingBrush.width = this.state.savedBrush.width;\r\n        document.getElementById(\"erase-brush-button\").classList.add(\"Active\");\r\n      });\r\n    } else {\r\n      canvas.freeDrawingBrush = this.state.savedBrush;\r\n      this.setState({ isEraser: false });\r\n      document.getElementById(\"erase-brush-button\").classList.remove(\"Active\");\r\n    }\r\n  }\r\n  /* undo/redo functions */\r\n  setCanvas(canvas){\r\n    // set canvas reference and save initial state for undo/redo\r\n    this.setState({ drawingCanvas: canvas, currentCanvasState: canvas.toDatalessJSON() });\r\n  }\r\n  setIsDrawing(){\r\n    this.setState({ isDrawing: true });\r\n  }\r\n  saveCanvasState(){\r\n    if(this.state.isDrawing){\r\n      let newStateStack = this.state.stateStack;\r\n      let currentCanvasState = this.state.currentCanvasState;\r\n      if(newStateStack.length === this.state.maxUndo){\r\n        // drop the oldest state if at max undo count\r\n        newStateStack.shift();\r\n      }\r\n      // add current canvas state to stack\r\n      newStateStack.push( currentCanvasState );\r\n      //update current state\r\n      this.setState({ currentCanvasState: this.state.drawingCanvas.toDatalessJSON(), \r\n                      stateStack: newStateStack, \r\n                      redoStack: [],\r\n                      isDrawing: false });\r\n    }    \r\n  }\r\n  undoDrawing(){\r\n    // if states left to undo\r\n    if(this.state.stateStack.length > 0){\r\n      let newCanvasState = this.state.currentCanvasState;\r\n      let currentCanvasState = this.state.drawingCanvas.toDatalessJSON();\r\n      // push current state to redo stack\r\n      let newRedoStack = this.state.redoStack;\r\n      newRedoStack.push(currentCanvasState);\r\n      // pop previous state from state stack\r\n      let newStateStack = this.state.stateStack;\r\n      let newState = newStateStack.pop();\r\n      // update to previous states and both stacks\r\n      this.setState({ currentCanvasState: newState, redoStack: newRedoStack, stateStack: newStateStack});\r\n      // update actual canvas\r\n      this.state.drawingCanvas.loadFromJSON(newCanvasState);      \r\n    }    \r\n  }\r\n  redoDrawing(){\r\n    // if states left to redo\r\n    if(this.state.redoStack.length > 0){\r\n      // pop new state from redo stack\r\n      let newRedoStack = this.state.redoStack;\r\n      let newCanvasState = newRedoStack.pop();\r\n      let currentCanvasState = this.state.drawingCanvas.toDatalessJSON();\r\n      // push current state to undo stack\r\n      let newStateStack = this.state.stateStack;\r\n      newStateStack.push(currentCanvasState);\r\n      // update to previous states and both stacks\r\n      this.setState({ currentCanvasState: currentCanvasState, redoStack: newRedoStack, stateStack: newStateStack});\r\n      // update actual canvas\r\n      this.state.drawingCanvas.loadFromJSON(newCanvasState);      \r\n    }  \r\n  }\r\n  resetUndoStack(){\r\n    this.setState({ redoStack: [], stateStack: []});\r\n  }\r\n  startPromptCountdown(newPrompt){\r\n    if(!this.state.promptCountdown){\r\n      this.setState({promptCountdown: true}, () => {\r\n        let promptTimer = document.getElementById(\"prompt-end-timer-wrapper\").children[0];\r\n        let promptTimerOverlay = document.getElementById(\"prompt-end-timer-wrapper\").children[1];\r\n        promptTimerOverlay.style.transition = \"60s linear\";\r\n        promptTimerOverlay.style.width = \"100%\";\r\n        let countdown = 60;\r\n        promptTimer.innerHTML = \"this prompt will change in \" + countdown + \" seconds...\";\r\n        let x = setInterval(() => {    \r\n          countdown -= 1;\r\n          promptTimer.innerHTML = \"this prompt will change in \" + countdown + \" seconds...\";\r\n          if (countdown < 1) {\r\n            clearInterval(x);\r\n            promptTimerOverlay.style.transition = \"0s linear\";\r\n            promptTimerOverlay.style.width = \"0%\";\r\n            promptTimer.innerHTML = \"\";\r\n            this.setState({currentPrompt: newPrompt, promptCountdown: false})        \r\n          }\r\n        }, 1000);\r\n      })\r\n    }    \r\n  }\r\n  toggleFocus(){\r\n    if(!this.state.focusMode){\r\n      this.setState({focusMode: true});\r\n      this.getCSSRule('.TextResponseBox').style.backgroundColor = \"rgb(31, 33, 28)\";\r\n      this.getCSSRule('.TextResponseBox').style.border = \"solid white 1px\";\r\n      this.getCSSRule('.ImageResponseBox').style.backgroundColor = \"rgb(31, 33, 28)\";\r\n      this.getCSSRule('.ImageResponseBox').style.border = \"solid white 1px\";\r\n    } else {\r\n      this.setState({focusMode: false});\r\n      this.getCSSRule('.TextResponseBox').style.backgroundColor = \"\";\r\n      this.getCSSRule('.TextResponseBox').style.border = \"\";\r\n      this.getCSSRule('.ImageResponseBox').style.backgroundColor = \"\";\r\n      this.getCSSRule('.ImageResponseBox').style.border = \"\";\r\n    }\r\n  }\r\n\r\n  dataURLtoFile(dataurl, filename){\r\n      var arr = dataurl.split(','),\r\n        mime = arr[0].match(/:(.*?);/)[1],\r\n        bstr = atob(arr[1]),\r\n        n = bstr.length,\r\n        u8arr = new Uint8Array(n);\r\n      while (n--) {\r\n        u8arr[n] = bstr.charCodeAt(n);\r\n      }\r\n      return new File([u8arr], filename, {\r\n        type: mime\r\n      });\r\n  }\r\n  getCSSRule(ruleName) {\r\n    ruleName = ruleName.toLowerCase();\r\n    var result = null;\r\n    var find = Array.prototype.find;\r\n\r\n    find.call(document.styleSheets, styleSheet => {\r\n        result = find.call(styleSheet.cssRules, cssRule => {\r\n            return cssRule instanceof CSSStyleRule \r\n                && cssRule.selectorText.toLowerCase() === ruleName;\r\n        });\r\n        return result != null;\r\n    });\r\n    return result;\r\n  }\r\n}\r\n/* \r\nexport default App */\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export default __webpack_public_path__ + \"static/media/alien.381f0676.png\";","export default __webpack_public_path__ + \"static/media/slowdiscpixel.685ade7f.gif\";"],"sourceRoot":""}